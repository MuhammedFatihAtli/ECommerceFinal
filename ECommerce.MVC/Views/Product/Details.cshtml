@model ECommerce.MVC.Models.ProductDetailVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (Model == null || Model.Product == null)
    {
        <div class="alert alert-danger mt-5 text-center">Ürün detayları getirilemedi.</div>
        return;
    }

    ViewData["Title"] = Model.Product.Name;
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm mb-4">
            <div class="row g-0">
                <div class="col-md-5 d-flex align-items-center justify-content-center bg-light">
                    @if (!string.IsNullOrEmpty(Model.Product.ImagePath))
                    {
                        <img src="@Model.Product.ImagePath" alt="@Model.Product.Name" class="img-fluid rounded p-3" style="max-height:320px; object-fit:contain;" />
                    }
                    else
                    {
                        <div class="d-flex align-items-center justify-content-center w-100" style="height:320px;">
                            <i class="fas fa-image text-muted fs-1"></i>
                        </div>
                    }
                </div>
                <div class="col-md-7">
                    <div class="card-body d-flex flex-column">
                        <h3 class="card-title mb-2">@Model.Product.Name</h3>
                        <span class="badge bg-primary mb-2">@Model.Product.CategoryName</span>
                        <p class="card-text text-muted">@Model.Product.Description ?? "Açıklama yok"</p>
                        <hr />
                        <div class="mb-2">
                            <span class="h4 text-success">@Model.Product.Price.ToString("C")</span>
                        </div>
                        <div class="mb-3">
                            <span class="badge @(Model.Product.Stock > 0 ? "bg-success" : "bg-danger")">
                                @(Model.Product.Stock > 0 ? $"{Model.Product.Stock} adet stokta" : "Stokta yok")
                            </span>
                        </div>

                        <div class="d-flex gap-2 mb-3">
                            <a asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i> Ürün Listesine Dön
                            </a>
                        </div>

                        @if (Model.Product.Stock > 0)
                        {
                            <form asp-controller="Product" asp-action="AddToCart" method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="productId" value="@Model.Product.Id" />
                                <div class="mb-3">
                                    <label for="quantity" class="form-label">Adet:</label>
                                    <input type="number" name="quantity" value="1" min="1" max="@Model.Product.Stock" class="form-control w-50" />
                                </div>
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-cart-plus me-1"></i> Sepete Ekle
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="alert alert-warning mt-3">
                                Ürün şu anda stokta yok.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Yorumlar Bölümü -->
        <div class="card shadow-sm p-3">
            <h4 class="mb-3">Yorumlar <span class="badge bg-secondary">@((Model.Comments?.Count ?? 0))</span></h4>

            @if (Model.Comments == null || !Model.Comments.Any())
            {
                <p class="text-muted">Henüz yorum yapılmamış.</p>
            }
            else
            {
                <div class="comment-list">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="comment-item border-bottom pb-2 mb-3">
                            <div class="comment-meta text-muted small mb-1">
                                <strong>@(string.IsNullOrEmpty(comment.UserName) ? "Misafir" : comment.UserName)</strong>
                                <span> • @comment.CreatedAt.ToString("g")</span>
                            </div>
                            <div class="comment-text small">
                                @comment.Text
                            </div>
                        </div>
                    }
                </div>
            }

            <hr />

            @if (User.Identity.IsAuthenticated)
            {
                <div class="row">
                    <div class="col-md-12">
                        <h5>Yorum Yap</h5>
                        <form asp-controller="Comment" asp-action="AddComment" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="ProductId" value="@Model.Product.Id" />
                            <div class="form-group mb-2">
                                <label for="Text">Yorumunuz</label>
                                <textarea name="Text" class="form-control" rows="3" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary btn-sm">Gönder</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<style>
    .card-title {
        font-size: 1.5rem;
        font-weight: 700;
    }

    .comment-list {
        font-size: 0.9rem;
    }

    .comment-item {
        padding-left: 5px;
    }

    .comment-meta {
        font-size: 0.8rem;
        color: #6c757d;
    }

    .comment-text {
        font-size: 0.9rem;
    }
</style>
